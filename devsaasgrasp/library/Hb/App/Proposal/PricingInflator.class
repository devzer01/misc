<?php

/**
 * Domain Object for Proposal Auction User
 * 
 * @copyright 2007 Global Market Insite Inc
 * @author jsadique
 * @version 1.0
 * @package App
 * @subpackage Proposal
 *
 */ 

class Hb_App_Proposal_PricingInflator extends Hb_App_Object
{

	/**
	 * Pricing inflator id
	 *
	 * @var int
	 */   
	protected $pricing_inflator_id = null;
	
	/**
	 * Pricing item id
	 *
	 * @var int
	 */   
	protected $pricing_item_id = null;
	
	/**
	 * License level Id
	 *
	 * @var int
	 */   
	protected $license_level_id = null;

	/**
	 * Inflator amount
	 *
	 * @var double
	 */  	
	protected $inflator_amount = null;
	
	/**
	 * Inflator amount
	 *
	 * @var string
	 */  	
	protected $effective_date = null;
	
	/**
	 * Expire date
	 *
	 * @var string
	 */   
	
	protected $expire_date;

	/**
	 * Create an Pricing Inflator Object
	 *
	 * @param int $id The pricing inflator id
	 * @param int $pricing_item_id The pricing item id
	 * @param int $license_level_id Licensing level id
	 * @param double $inflator_amount Infaltor amount
	 * @param int $effective_date The effective date
	 * @param int $expire_date The expire date
	 */		
	function __construct(
									$id = null,
									$pricing_item_id = null,
									$license_level_id = null,
									$inflator_amount = null,
									$effective_date = null,
									$expire_date = null																	
								)
	{		
		$this->pricing_inflator_id 	= $id;
		$this->pricing_item_id 	= $pricing_item_id;
		$this->license_level_id = $license_level_id;
		$this->inflator_amount 	= $inflator_amount;
		$this->effective_date 	= $effective_date;
		$this->expire_date 		= $expire_date;		

		parent::__construct($id);	
		
	}
	
	/**
	 * Return pricing inflator id
	 *
	 * @return int Pricing inflator id
	 */	
	public function GetPricingInflatorId()
	{
		return $this->pricing_inflator_id;
	}

	/**
	 * Return Pricing item id
	 *
	 * @return int The pricing item id
	 */	
	public function GetPricingItemId()
	{
		return $this->pricing_item_id;
	}

	/**
	 * Return License level Id
	 *
	 * @return int License level Id
	 */	
	public function GetLicenseLevelId()
	{
		return $this->license_level_id;
	}

	/**
	 * Return inflator amount
	 *
	 * @return double Inflator amount
	 */	
	public function GetInflatorAmount()
	{
		return $this->inflator_amount;
	}

	/**
	 * Return Effective date for inflator
	 *
	 * @return int Effective date
	 */	
	public function GetEffectiveDate()
	{
		return $this->effective_date;
	}

	/**
	 * Return Expire date for inflator
	 *
	 * @return int Expire date
	 */	
	public function GetExpireDate()
	{
		return $this->expire_date;
	}
	
	
	/**
	 * Sets pricing inflator id
	 *
	 * @param int $pricing_inflator_id The pricing inflator id
	 */	
	public function SetPricingInflatorId($pricing_inflator_id)
	{
		$this->pricing_inflator_id = (int) $pricing_inflator_id;
		$this->__id = (int) $pricing_inflator_id;
		$this->MarkDirty();
	}
	
	/**
	 * Sets pricing item id
	 *
	 * @param int $pricing_item_id The pricing item id
	 */	
	public function SetPricingItemId($pricing_item_id)
	{
		$this->pricing_item_id = (int) $pricing_item_id;
		$this->MarkDirty();
	}

	/**
	 * Sets Licensiing level id
	 *
	 * @param int $license_level_id The license level id
	 */	
	public function SetLicenseLevelId($license_level_id)
	{
		$this->license_level_id = (int) $license_level_id;
		$this->MarkDirty();
	}

	/**
	 * Sets inflator amount
	 *
	 * @param double $inflator_amount The inflator amount
	 */	
	public function SetInflatorAmount($inflator_amount)
	{
		$this->inflator_amount = (double) $inflator_amount;
		$this->MarkDirty();
	}
	
	/**
	 * Sets the effective date
	 *
	 * @param string $effective_date The effective date
	 */	
	public function SetEffectiveDate($effective_date)
	{
		$this->effective_date = $effective_date;
		$this->MarkDirty();
	}

	/**
	 * Sets the expiry date
	 *
	 * @param string $expire_date The expiry date
	 */	
	public function SetExpireDate($expire_date)
	{
		$this->expire_date = $expire_date;
		$this->MarkDirty();
	}
	


}
?>