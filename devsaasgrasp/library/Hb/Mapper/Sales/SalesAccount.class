<?php
/**
 * Mapper for Sales Account 
 *
 * @copyright 2007 Global Market Insite Inc
 * @author ddayananda
 * @version 1.0
 * @package Mapper
 * @subpackage Sales
 */
class Hb_Mapper_Sales_SalesAccount extends Hb_Mapper_Mapper 
{
	/**
	 * Domain object class name
	 *
	 * @var string 
	 */
	protected $__gateway = 'Hb_Db_Sales_SalesAccount';

	/**
	 * Domain for this mapper
	 *
	 * @var string 
	 */		
	protected static $__domain  = 'Hb_App_Sales_SalesAccount';

	/**
	 * Primary key
	 *
	 * @var string 
	 */
	protected $primary_key = "sam_account_id";

	/**
	 * Table name
	 *
	 * @var string 
	 */	
	protected $table = "sam_account";
	
	
	/**
	 * Builds and returns the relevent domain object for this mapper
	 *
	 * @param record set $row  Result row from the Zend_Db framework 
	 * @return obj An instance of the relevent domain object
	 */	
	protected function doBuildObject($row)
	{
		return new Hb_App_Sales_SalesAccount($row->sam_account_id,
														 $row->region_id, 
														 $row->user_id,
														 $row->account_id,
														 $row->sam_type_id,
														 $row->sam_date,
														 $row->amount
														);		
	}
	
	
	/**
	 * Builds and returns a Zend_Db Select object
	 *
	 * @return $select Selected Result Set from the Zend_Db framework 
	 */	
	protected function GetBaseSelect()
	{
		$db     = Hb_Util_Db_Connection::GetInstance(); 
      $select = $db->select();           	 	 	 	 	
		$select->from($this->table, array('sam_account_id', 	
													 'region_id', 	
													 'user_id',
													 'account_id',
													 'sam_type_id',
													 'sam_date',
													 'amount'													 
												   ));		         
      return $select; 				
	}
	
	
	/**
	 * Finds a Sales Account  by it's Id
	 *
	 * @param  int $id The record identifier that uniquely identifies the row.
	 * @return  Result Row from the Zend_Db framework 
	 */			
	protected function doFindById($id)
	{
		$select = $this->GetBaseSelect();        
    	$select->where($this->primary_key . '= ?', $id);				
             
    	return $this->getRow($select); 						
	}
	
	
	/**
	 * Saves domain object
	 *
	 * @param Hb_App_Object $obj Instance of the relevent domain object
	 */				
	protected function doSave(Hb_App_Object $obj)
	{	
		/* @var $obj Hb_App_SalesAccount */
				
		$data = array('region_id'  => $obj->GetRegionId (),
					     'user_id'    => $obj->GetUserId(),
					     'account_id' => $obj->GetAccountId(),
					     'sam_type_id'=> $obj->GetSalesTypeId(),
					     'sam_date'   => $obj->GetSalesDate(),
					     'amount'		=> $obj->GetAmount(),
					    );
		
		$db = Hb_Util_Db_Connection::GetInstance();
						
		if (is_null($obj->GetId())) 
		{
			$db->insert($this->table, $data);
			$obj->SetSalesAccountId($db->lastInsertId());
		} 
		else 
		{
			$db->update($this->table, $data, $this->primary_key . '=' . $obj->GetId());	
		}	
	}	
}
?>