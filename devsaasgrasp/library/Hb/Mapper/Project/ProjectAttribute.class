<?php 
/**
 * Mapper Object for Project Attribute 
 * 
 * @copyright 2007 Global Market Insite Inc
 * @author ddayananda
 * @version 1.1
 * @package Mapper
 * @subpackage Project
 *
 */ 
class Hb_Mapper_Project_ProjectAttribute extends Hb_Mapper_Mapper 
{
	/**
	 * Primary key
	 *
	 * @var string 
	 */
	protected $primary_key = 'pjm_attr_id';
	
	/**
	 * Table name
	 *
	 * @var string 
	 */
	protected $table = 'pjm_attr';
	
	/**
	 * Builds and returns the Project Attribute  domain object for this mapper
	 *
	 * @param $row $object Result row from the Zend_Db framework for the pjm_attr table
	 * @return object An instance of the Project Attribute  domain object 
	 */	
	protected function doBuildObject($row)
	{
		return new Hb_App_Project_ProjectAttribute($row->pjm_attr_id,
																 $row->pjm_id,
																 $row->pjm_attr_name,
																 $row->pjm_attr_value
																);
	} 
	
	
	/**
	 * Builds and returns a Zend_Db Select object
	 *
	 * @return $select object Result Select object from the Zend_Db framework 
	 */
	protected function GetBaseSelect()
	{
		$db 		= Hb_Util_Db_Connection::GetInstance();
		$select 	= $db->select();
	 	$select->from(array('pa' => 'pjm_attr'), array('pjm_attr_id',
																	  'pjm_id',
																	  'pjm_attr_name',
																	  'pjm_attr_value')
						  );
		return $select;
	}
	
	
	/**
	 * Finds a Project Attribute  by it's Id
	 *
	 * @param $id int The record identifier that uniquely identifies the row.
	 * @return obj Result row from the Zend_Db framework for the pjm_attr table
	 */	
	protected function doFindById($id)
	{
	 	$select = $this->GetBaseSelect();
		$select->where('pa.'. $this->primary_key .'= ?', $id);
		 	
		return $this->getRow($select);
	}
	
	
	/**
	 * Saves domain object
	 *
	 * @param Hb_App_Object $obj object Instance of the Project Attribute  domain object
	 */
	protected function doSave(Hb_App_Object $obj)
	{
		require_once('class/Hb/Util/Db/Query.class');
		
		$db = Hb_Util_Db_Query::getInstance();

		if (is_null($obj->GetId())) 
		{
			$query = "INSERT INTO pjm_attr (pjm_id,pjm_attr_name, pjm_attr_value ) " . 
						"VALUES ( " . $obj->GetProjectId() . ",'" . $db->escapeString($obj->GetAttributeName()) . "',". 
						$db->escapeString($obj->GetAttributeValue()) . ") " ;
			
			$db->q($query);
			
			$obj->SetProjectAttributeId($db->getLastInsertId());			
			
		} 
		else
		{
			$query = " UPDATE pjm_attr " .
						" SET pjm_id = " . $obj->GetProjectId() . " ,pjm_attr_name = '" . $db->escapeString($obj->GetAttributeName()) . "', " .
						" pjm_attr_value = ' " . $db->escapeString($obj->GetAttributeValue()) . " ' " .
						" WHERE pjm_attr_id = " .  $obj->GetId() ; 

			$db->q($query);
		}
	
	}
}

?>