<?php
/**
 * Mapper for Study Comment
 *
 * @copyright 2007 Global Market Insite Inc
 * @author wfernando
 * @version 1.1
 * @updated 23-Aug-2007 19:48:12 AM
 */

class Hb_Mapper_Study_StudyComment extends Hb_Mapper_Mapper 
{
	/**
	 * Class description
	 *
	 * @var string 
	 */
	protected $__gateway = 'Hb_Db_Study_StudyComment';

	/**
	 * Domain for this mapper
	 *
	 * @var string 
	 */		
	protected static $__domain  = 'Hb_App_Study_StudyComment';

	/**
	 * Primary key
	 *
	 * @var string 
	 */
	protected $primary_key = "study_comment_id";

	/**
	 * Table name
	 *
	 * @var string 
	 */	
	protected $table = "study_comment";	
	
	/**
	 * Builds and returns the relevent domain object for this mapper
	 *
	 * @param $row $obj Result row from the Zend_Db framework 
	 * @return obj An instance of the relevent domain object
	 */	
	protected function doBuildObject($row)
	{
		return new Hb_App_Study_StudyComment($row->study_comment_id,$row->study_id,$row->department_id,
											 $row->comment_date , $row->comment_type_id,$row->alert_level_id,
											 $row->notes,$row->comment_reported,$row->comment_reported_date);
	}
	
	/**
	 * Builds and returns a Zend_Db Select object
	 *
	 * @return $row object Result Select object from the Zend_Db framework 
	 */	
	protected function GetBaseSelect()
	{
	  $db = Hb_Util_Db_Connection::GetInstance(); 
      $select = $db->select();
      $select->from('study_comment', array(
											'study_comment_id', 	
											'study_id',
											'department_id',
											'comment_date',
											'comment_type_id',
											'alert_level_id',
											'notes',
											'comment_reported',
											'comment_reported_date'));
		return $select;													
	 
	}
	
	/**
	 * Finds a Study Comment by it's Id
	 *
	 * @param $id int The record identifier that uniquely identifies the row.
	 * @return obj Result row from the Zend_Db framework 
	 */			
	protected function doFindById($id)
	{
		$select = $this->GetBaseSelect();        
    	$select->where('study_comment_id = ?', $id);				
             
    	return $this->getRow($select); 						
	}
	
	/**
	* Saves a dirty domain object to the persistence layer
	*
	* @param $obj object Instance of the relevant domain object
	*/
	protected function doSave(Hb_App_Object $obj)
	{
	
	$data = array(
					'study_id' => $obj->GetStudyId(),
					'department_id' => $obj->GetDepartmentId(),
					'comment_date' => $obj->GetCommentDate(),
					'comment_type_id' => $obj->GetCommentTypeId(),
					'alert_level_id' => $obj->GetAlertLevelId(),
					'notes' => $obj->GetNotes(),
					'comment_reported' => $obj->GetCommentReported(),
					'comment_reported_date' => $obj->GetCommentReportedDate());
				 
	$db = Hb_Util_Db_Connection::GetInstance();
	
		if (is_null($obj->GetId())) 
		{
			$db->insert('study_comment', $data);
			$obj->SetStudyCommentId($db->lastInsertId());
		}
		else 
		{
			$db->update('study_comment', $data, 'study_comment_id = ' . $obj->GetId());
		} 
		
	}
	
}
?>