<?php
/**
 * Mapper for Study Type Task 
 *
 * @copyright 2007 Global Market Insite Inc
 * @author ddayananda
 * @version 1.0
 * @package Mapper
 * @subpackage Study
 */
class Hb_Mapper_Study_StudyTypeTask extends Hb_Mapper_Mapper 
{
	/**
	 * Domain object class name
	 *
	 * @var string 
	 */
	protected $__gateway = 'Hb_Db_Study_StudyTypeTask';

	/**
	 * Domain for this mapper
	 *
	 * @var string 
	 */		
	protected static $__domain  = 'Hb_App_Study_StudyTypeTask';

	/**
	 * Primary key
	 *
	 * @var string 
	 */
	protected $primary_key = "study_type_task_id";

	/**
	 * Table name
	 *
	 * @var string 
	 */	
	protected $table = "study_type_task";
	
	
	/**
	 * Builds and returns the relevent domain object for this mapper
	 *
	 * @param record set $row  Result row from the Zend_Db framework 
	 * @return obj An instance of the relevent domain object
	 */	
	protected function doBuildObject($row)
	{
		return new Hb_App_Study_StudyTypeTask($row->study_type_task_id,
														  $row->study_type_id, 
														  $row->study_task_id,
														  $row->study_stage_id,
														  $row->sort_order,
														  $row->task_duration);		
	}
	
	
	/**
	 * Builds and returns a Zend_Db Select object
	 *
	 * @return $select Selected Result Set from the Zend_Db framework 
	 */	
	protected function GetBaseSelect()
	{
		$db     = Hb_Util_Db_Connection::GetInstance(); 
      $select = $db->select();           	 	 	 	 	
		$select->from($this->table, array('study_type_task_id', 	
													 'study_type_id', 	
													 'study_task_id',
													 'study_stage_id',
													 'sort_order',
													 'task_duration'													 
												   ));		         
      return $select; 				
	}
	
	
	/**
	 * Finds a Study Type Task  by it's Id
	 *
	 * @param  int $id The record identifier that uniquely identifies the row.
	 * @return  Result Row from the Zend_Db framework 
	 */			
	protected function doFindById($id)
	{
		$select = $this->GetBaseSelect();        
    	$select->where($this->primary_key . '= ?', $id);				
             
    	return $this->getRow($select); 						
	}
	
	
	/**
	 * Saves domain object
	 *
	 * @param Hb_App_Object $obj Instance of the relevent domain object
	 */				
	protected function doSave(Hb_App_Object $obj)
	{	
		/* @var $obj Hb_App_StudyTypeTask */
				
		$data = array('study_type_id' => $obj->GetStudyTypeId (),
					     'study_task_id' => $obj->GetStudyTaskId(),
					     'study_stage_id'=> $obj->GetStudyStageId(),
					     'sort_order' 	=> $obj->GetSortOrder(),
					     'task_duration' => $obj->GetTaskDuration()
					    );
		
		$db = Hb_Util_Db_Connection::GetInstance();
						
		if (is_null($obj->GetId())) 
		{
			$db->insert($this->table, $data);
			$obj->SetStudyTypeTaskId($db->lastInsertId());
		} 
		else 
		{
			$db->update($this->table, $data, $this->primary_key . '=' . $obj->GetId());	
		}	
	}	
}
?>