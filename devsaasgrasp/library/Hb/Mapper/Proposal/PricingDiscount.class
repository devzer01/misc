<?php 
/**
 * Mapper Object for Pricing Discount
 * 
 * @copyright 2007 Global Market Insite Inc
 * @author harsha
 * @version 1.1
 * @package Mapper
 * @subpackage Proposal
 *
 */ 
class Hb_Mapper_Proposal_PricingDiscount extends Hb_Mapper_Mapper 
{	
	/**
	 * Primary key
	 *
	 * @var string 
	 */
	protected $primary_key = 'pricing_discount_id';
	
	/**
	 * table name
	 *
	 * @var string 
	 */
	protected $table = 'pricing_discount';
	
	/**
	 * Builds and returns the Pricing Discount domain object for this mapper
	 *
	 * @param $row object Result row from the Zend_Db framework for the pricing_discount table
	 * @return Hb_App_Proposal_PricingDiscount An instance of the Pricing Discount domain object 
	 */
	protected function doBuildObject($row)
	{
		return new Hb_App_Proposal_PricingDiscount($row->pricing_discount_id,
																 $row->expire_date,
																 $row->effective_date,
																 $row->discount_amount,
																 $row->pricing_item_id,
																 $row->license_level_id,
																 $row->pricing_discount_type_id
																);
	}
	
	/**
	 * Builds and returns a Zend_Db Select object
	 *
	 * @return $select object Result Select object from the Zend_Db framework 
	 */
	protected function GetBaseSelect()
	{
		$db 		= Hb_Util_Db_Connection::GetInstance();
		$select	= $db->select();
		$select->from(array('pd' => 'pricing_discount'), array('pricing_discount_id',
																				 'pricing_item_id',
																				 'license_level_id',
																				 'pricing_discount_type_id',
																				 'discount_amount',
																				 'effective_date',
																				 'expire_date')
						 );
		
		return $select;
	}
	
	/**
	 * Finds a Pricing discount  by it's Id
	 *
	 * @param $id int The record identifier that uniquely identifies the row.
	 * @return object Result row from the Zend_Db framework for the pricing_discount table
	 */	
	protected function doFindById($id)
	{
		$select = $this->GetBaseSelect();
		$select->where('pd.pricing_discount_id = ?', $id);
		
		return $this->getrow($select);
	}
	
	/**
	 * Saves a dirty domain object to the persistence layer
	 *
	 * @param $obj object Instance of the Pricing Discount domain object
	 */
	protected function doSave(Hb_App_Object $obj)
	{
		/* @var $obj Hb_App_Proposal_PricingDiscount */
		
		$data  = array(
			'expire_date'					=> $obj->GetExpireDate(),
			'effective_date'				=> $obj->GetEffectiveDate(),
			'discount_amount'				=> $obj->GetDiscountAmount(),					
			'pricing_item_id'				=> $obj->GetPricingItemId(),
			'license_level_id'			=> $obj->GetLicenseLevelId(),				
			'pricing_discount_type_id'	=> $obj->GetPricingDiscountTypeId());
			
		$db = Hb_Util_Db_Connection::GetInstance();
		
		if(is_null($obj->GetId())) {
			$db->Insert('pricing_discount', $data);
			$obj->SetPricingDiscountId($db->lastInsertId());
		}else {
			$db->Update('pricing_discount', $data, 'pricing_discount_id = '. $obj->GetId());
		}
	}
}
?>