<?php 
/**
 * Mapper class of ProposalAttributeDefinition
 * 
 * @copyright 2007 Global Market Insite Inc
 * @author krathnayake
 * @version 1.0
 * @package Mapper
 * @subpackage Proposal
 */  

class Hb_Mapper_Proposal_ProposalAttributeDefinition extends Hb_Mapper_Mapper  
{
   /**
	 * Primary key
	 *
	 * @var string 
	 */
	protected $primary_key = 'proposal_attr_def_id';
   
  /**
   * Table name
   *
   * @var string 
   */  
   protected $table = 'proposal_attr_def';
   
	/**
	 * Builds and returns the Proposal Attribute Definition domain object
	 *
	 * @param $row $object Result row from the Zend_Db framework for proposal_attr_def table
	 * @return object An instance of the Proposal Attribute Definition domain object 
	 */	
	protected function doBuildObject($row)
	{
		return new Hb_App_Proposal_ProposalAttributeDefinition(
													$row->proposal_attr_def_id,
													$row->proposal_attr_name,
													$row->proposal_attr_description
													);
	} 
	
	/**
	 * Builds and returns a Zend_Db Select object
	 *
	 * @return $select object Result Select object from the Zend_Db framework 
	 */
	protected function GetBaseSelect()
	{
		$db 		= Hb_Util_Db_Connection::GetInstance();
		$select 	= $db->select();
	 	
		$select->from(array('pd' => 'proposal_attr_def'),
	 					array('proposal_attr_def_id',
	 							'proposal_attr_name',
							  	'proposal_attr_description'
							  )
						 );
	 	return $select;
	}
	
	/**
	 * Returns a tuple by given Proposal Attribute Definition
	 *
	 * @return object
	 */
	protected function doFindById($id)
	{
	 	$select = $this->GetBaseSelect();
		
	 	$select->where($this->primary_key.' = ?', $id);					 	
		
	 	return $this->getRow($select);
	}
	
	/**
	 * Saves a dirty domain object to the persistence layer
	 *
	 * @param $obj object Instance of the relevent domain object
	 */				
	protected function doSave(Hb_App_Object $obj)
	{				
 		/* @var $obj Hb_App_Proposal_ProposalAttributeDefinition   */

 		$data = array
 		(
 			'proposal_attr_name' 			=> $obj->GetAttributeName(),
			'proposal_attr_description' 	=> $obj->GetAttributeDescription()
		);
		
		$db = Hb_Util_Db_Connection::GetInstance();
						
		if (is_null($obj->GetId())) 
		{
			$db->insert($this->table, $data);
			$obj->SetAttributeDefinitionId ($db->lastInsertId());
		} 
		else 
		{
			$db->update($this->table, $data, $this->primary_key. ' = ' .$obj->GetId());	
		}
	}
}
?>