<?php
/**
 * Mapper Class for BillingReportAction
 * 
 * @copyright 2007 Global Market Insite Inc
 * @author krathnayake
 * @version 1.1
 * @package Mapper 
 * @subpackage Billing
 */
class Hb_Mapper_Billing_BillingReportAction extends Hb_Mapper_Mapper
{
	/**
	 * Variable for the Primary Key Field of Billing Report Action table
	 *
	 * @var int 
	 */	
	protected $primary_key = 'armc_action_id';
	
	/**
	 * Variable for Billing Report Action table
	 *
	 * @var string 
	 */	
	protected $table = 'armc_action';
	
	/**
	 * Build the BillingReportAction Object
	 *
	 * @param Zend_Db_Table $row
	 * @return Hb_App_Billing_BillingReportAction
	 */
	protected function doBuildObject($row)
	{
		return new Hb_App_Billing_BillingReportAction
		(	$row->armc_action_id,
			$row->armc_id,
			$row->armc_action_type_id
		);
	}
	
	/**
	 * Returns Billing Report Action data
	 * 
	 * @return Zend_Db_Select
	 */
	protected function GetBaseSelect()
	{
		$db = Hb_Util_Db_Connection::GetInstance();
		$select = $db->select();
		$select->from(array('ba' => 'armc_action'), 
							array(	'armc_action_id',
										'armc_id',
										'armc_action_type_id'
									)
							);
		return $select;
	}
	
	/**
	 * Returns a row by id
	 * 
	 * @return object
	 */
	protected function doFindById($id)
	{
		$select = $this->GetBaseSelect();		
		$select->where('ba.armc_action_id = ?', $id);
				
		return $this->getRow($select);
	}
		
	protected function doFindByActionType($id, $type) {
		$select = $this->GetBaseSelect();		
		$select->where('ba.armc_id = ?', $id);
		$select->where('ba.armc_action_type_id = ?', $type);				
		return $this->getRow($select);
	}
	
	public function FindByActionType($id, $type)
	{
		$result = $this->doFindByActionType($id, $type);
		return $this->doBuildObject($result);
	}
	
	/**
	 * Saving Data
	 *
	 * @param Hb_App_Object $obj Instance of a HB app object 
	 * @return object
	 */
	protected function doSave(Hb_App_Object $obj)
	{
		// @var $obj Hb_App_Billing_BillingReportAction  
		
		$data = array(
			'armc_id'					=> $obj->GetBillingReportId(),
			'armc_action_type_id'	=> $obj->GetBillingReportActionTypeId());

		$db = Hb_Util_Db_Connection::GetInstance();
					
		if (is_null($obj->GetId())) 
		{
			$db->insert('armc_action', $data);
			$obj->SetBillingReportActionId($db->lastInsertId());
		}
		else 
		{
			$db->update('armc_action', $data, 'armc_action_id = ' . $obj->GetId());	
		}
	}
}
?>