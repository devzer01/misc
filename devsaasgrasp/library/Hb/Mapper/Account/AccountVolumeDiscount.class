<?php
/**
 * Mapper Class for AccountVolumeDiscount
 * 
 * @copyright 2007 Global Market Insite Inc
 * @author krathnayake
 * @version 1.1
 * @package Mapper 
 * @subpackage Account
 */
class Hb_Mapper_Account_AccountVolumeDiscount extends Hb_Mapper_Mapper
{
	/**
	 * Variable for the Primary Key Field of Account Volume Discount table
	 *
	 * @var int 
	 */	
	protected $primary_key = 'partner_volume_discount_id';
	
	/**
	 * Variable for Account Volume Discount table
	 *
	 * @var string 
	 */	
	protected $table = 'partner_volume_discount';
	
	/**
	 * Build the AccountVolumeDiscount Object
	 *
	 * @param Zend_Db_Table $row
	 * @return Hb_App_Account_AccountVolumeDiscount
	 */
	protected function doBuildObject($row)
	{
		return new Hb_App_Account_AccountVolumeDiscount
		(	$row->partner_volume_discount_id,
			$row->partner_id,
			$row->volume_amount,
			$row->discount_amount,
			$row->effective_date,
			$row->expire_date );
	}
	
	/**
	 * Returns Account Volume Discount Country data
	 * 
	 * @return Zend_Db_Select
	 */
	protected function GetBaseSelect()
	{
		$db = Hb_Util_Db_Connection::GetInstance();
		$select = $db->select();
		$select->from(array('avd' => 'partner_volume_discount'), 
							array(	'partner_volume_discount_id',
										'partner_id',
										'volume_amount',
										'discount_amount',
										'effective_date',
										'expire_date'	)
									);
		return $select;
	}
	
	/**
	 * Returns a row by id
	 * 
	 * @return object
	 */
	protected function doFindById($id)
	{
		$select = $this->GetBaseSelect();		
		$select->where('avd.partner_volume_discount_id = ?', $id);
				
		return $this->getRow($select);
	}
		
	/**
	 * Saving Data
	 *
	 * @param Hb_App_Object $obj Instance of a HB app object 
	 * @return object
	 */
	protected function doSave(Hb_App_Object $obj)
	{
		// @var $obj Hb_App_Account_AccountVolumeDiscount  
		$data = array(
			'partner_id' 						=> $obj->GetAccountId(),
			'volume_amount' 					=> $obj->GetVolumeAmount(),
			'discount_amount' 				=> $obj->GetDiscountAmount(),
			'effective_date' 					=> $obj->GetEffectiveDate(),
			'expire_date' 						=> $obj->GetExpireDate()
		);

		$db = Hb_Util_Db_Connection::GetInstance();
					
		if (is_null($obj->GetId())) 
		{
			$db->insert('partner_volume_discount', $data);
			$obj->SetAccountVolumeDiscountId($db->lastInsertId());
		}
		else 
		{
			$db->update('partner_volume_discount', $data, 'partner_volume_discount_id = ' . $obj->GetId());	
		}
	}
}
?>