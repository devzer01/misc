<?php
/**
 * Mapper Class for SalesRegion
 * 
 * @copyright 2007 Global Market Insite Inc
 * @author cediriweera
 * @version 1.1
 * @package Mapper 
 * @subpackage Sales
 */

class Hb_Mapper_Sales_SalesRegion extends Hb_Mapper_Mapper
{
	/**
	 * Primary Key field for the Sales region
	 *
	 * @var string 
	 */	
	protected $primary_key = 'sam_region_id';

	/**
	 *  Sales region table
	 *
	 * @var string 
	 */
	protected $table = 'sam_region';
	
	/**
	 * Domain for this mapper
	 *
	 * @var string 
	 */	
	protected static $__domain = 'Hb_App_Sales_SalesRegion';

	/**
	 * Gateway class description
	 *
	 * @var string 
	 */		
	protected $__gateway = 'Hb_Db_Sales_SalesRegion';
	
	/**
	 * Build the SalesRegion Object
	 *
	 * @param Zend_Db_Table $row
	 * @return Hb_App_Sales_SalesRegion
	 */
	protected function doBuildObject($row)
	{		
		return new Hb_App_Sales_SalesRegion($row->sam_region_id,
													  	$row->region_id,
													  	$row->sam_type_id,
													  	$row->sam_date,
												 	  	$row->amount);
	}
	
	/**
	 * Get the base data set for SalesRegion
	 *
	 * @return Zend_Db_Select
	 */
	protected function GetBaseSelect()
	{
		$db = Hb_Util_Db_Connection::GetInstance();
		$select = $db->select(); 
         
		$select->from(array('sr' => 'sam_region'), array('sam_region_id',
																	  	 'region_id', 
																	  	 'sam_type_id',
																	  	 'sam_date', 
													    		  	  	 'amount'));
		return $select;	
	}
	
	/**
	 * Returns a tuple by given Sales Region
	 *
	 * @return object
	 */
	protected function doFindById($id)
	{		
		$select = $this->GetBaseSelect();        
		$select->where('sr.sam_region_id = ?', $id);				

		return $this->getRow($select);		
	}
	
	/**
	 * Return the Sales Region
	 *
	 * @param Hb_App_Object SalesRegion
	 * @return object Sales Region
	 */
	protected function doSave(Hb_App_Object $obj)
	{
		$data = array(
							'region_id' 	=> $obj->GetRegionId(),
							'sam_type_id' 	=> $obj->GetSalesTypeId(),
							'sam_date' 		=> $obj->GetSalesDate(),
							'amount'			=> $obj->GetAmount()
						 );
				 
		$db = Hb_Util_Db_Connection::GetInstance();
	
		if (is_null($obj->GetId())) 
		{
			$db->insert($this->table, $data);
			$obj->SetSalesRegionId($db->lastInsertId());
		}
		else 
		{
			$db->update($this->table, $data, $this->primary_key . ' = ' . $obj->GetId());
		} 
	  
	}

} 
?>