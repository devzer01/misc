<?php
/**
 * Mapper Class for StudyTemplateProduct
 * 
 * @copyright 2007 Global Market Insite Inc
 * @author cediriweera
 * @version 1.1
 * @package Mapper 
 * @subpackage Study
 */

class Hb_Mapper_Study_StudyTemplateProduct extends Hb_Mapper_Mapper
{
	/**
	 * Primary Key field for the Study template product
	 *
	 * @var string 
	 */	
	protected $primary_key = 'study_template_product_id';

	/**
	 * Study template product table
	 *
	 * @var string 
	 */
	protected $table = 'study_template_product';
	
	/**
	 * Domain for this mapper
	 *
	 * @var string 
	 */	
	protected static $__domain = 'Hb_App_Study_StudyTemplateProduct';

	/**
	 * Gateway class description
	 *
	 * @var string 
	 */		
	protected $__gateway = 'Hb_Db_Study_StudyTemplateProduct';
	
	/**
	 * Build the StudyTemplateProduct Object
	 *
	 * @param Zend_Db_Table $row
	 * @return Hb_App_Study_StudyTemplateProduct
	 */
	protected function doBuildObject($row)
	{		
		return new Hb_App_Study_StudyTemplateProduct($row->study_template_product_id,
																	$row->study_template_id,
																	$row->product_id);
	}
	
	/**
	 * Get the base data set for StudyTemplateProduct
	 *
	 * @return Zend_Db_Select
	 */
	protected function GetBaseSelect()
	{
		$db = Hb_Util_Db_Connection::GetInstance();
		$select = $db->select(); 
         
		$select->from(array('stp' => $this->table), array('study_template_product_id',
																		  'study_template_id',
																    	  'product_id'));
		return $select;	
	}
	
	/**
	 * Returns a tuple by given Study template product
	 *
	 * @return object
	 */
	protected function doFindById($id)
	{		
		$select = $this->GetBaseSelect();        
		$select->where('stp.'. $this->primary_key . '= ?', $id);				

		return $this->getRow($select);		
	}
	
	/**
	 * Return the Study template product
	 *
	 * @param Hb_App_Object StudyTemplateProduct
	 * @return object Study template product
	 */
	protected function doSave(Hb_App_Object $obj)
	{
		$data = array(
							'study_template_id' 	=> $obj->GetStudyTemplateId(),
							'product_id'			=> $obj->GetProductId()
						 );
				 
		$db = Hb_Util_Db_Connection::GetInstance();
	
		if (is_null($obj->GetId())) 
		{
			$db->insert($this->table, $data);
			$obj->SetStudyTemplateProductId($db->lastInsertId());
		}
		else 
		{
			$db->update($this->table, $data, $this->primary_key . ' = ' . $obj->GetId());
		} 
	  
	}

} 
?>