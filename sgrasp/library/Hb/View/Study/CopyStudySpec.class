<?php
class Hb_View_Study_CopyStudySpec extends Hb_Util_View_View 
{
	protected  $__template_name = 'app/stm/vw_copy_study_spec.tpl';
	
	protected $__handler = 'Smarty';
	
	public function __construct()
	{
		$this->SetErrorHandler('stm');
		$this->SetMessageHandler('stm');
	}
	
	/**
	 * Enter description here...
	 *
	 */
	protected  function LoadData()
	{
		$request = Hb_Util_Request_Request::GetInstance();
		
		$db     = Hb_Util_Db_Connection::GetInstance();
		
		$select = $db->select();
		
		$select->from(array('s' => 'study'), array('study_id', 'study_name', 'account_id' => 'partner_id'));
		
		$attributes = array('ACCOUNT_NAME', 'PROPOSAL_REVISION_ID', 'COUNTRY_CODE', 'PROPOSAL_NAME', 'PROPOSAL_ID', 'PROPOSAL_REVISION_NUM');
		
		foreach ($attributes as $attr) {
			$select->joinLeft(
				array('sa_' . strtolower($attr) => 'study_attr'), 
				"sa_" . strtolower($attr) . ".study_id = s.study_id AND sa_" . strtolower($attr) . ".study_attr = '" . $attr ."' ", 
				array(strtolower($attr) => "study_value"));	
		}
					
		$select->where('s.study_id = ?', $request->study_id);
		
		$study = $db->fetchRow($select);
		
		$s = array(
			'study_id'     => $study->study_id,
			'study_name'   => $study->study_name,
			'account_id'   => $study->account_id,
			'account_name' => $study->account_name,
			'revision_id'  => $study->proposal_revision_id,
			'study_country_code' => $study->country_code,
			'proposal_name' => $study->proposal_name,
			'proposal_id'  => $study->proposal_id,
			'proposal_revision' => $study->proposal_revision_num
		);
		
		$data = HBRPCCall("pgen", "GetOptionInfo", array('proposal_revision_id' => $study->proposal_revision_id, 'country_code' => $study->country_code));
		
		$options = unserialize($data['data']);
		
		if (count($options) > 1) {
			$this->SetData('message', 'Multiple Segments Found');
		}
		
		$spec = array();
		$opt  = array();
		
		$items = array(
			'N_COMPLETE' => array('id' => 1, 'field' => 'completes', 'title' => 'Completes'),
			'MIN_INCIDENCE' => array('id' => 2, 'field' => 'incidence_rate', 'title' => 'Incidence (Min)'),
			'MAX_INCIDENCE' => array('id' => 3, 'field' => 'incidence_rate', 'title' => 'Incidence (Max)'),
			'QVALUE' => array('id' => 4, 'field' => 'option_total', 'title' => 'Quoted Value'),
			'PVALUE' => array('id' => 5, 'field' => 'option_total', 'title' => 'Project Value'),
			'TOTALQP' => array('id' => 6, 'field' => 'questions_programmed', 'title' => 'Questions Programmed')
		);
		
		foreach ($options as $opt) {						
			$description = $opt->country_code . " - " 
			             . (int) $opt->incidence_rate . "% - " 
			             . (int) $opt->completes . "(n) ";
			             
			if (trim($opt->sub_group_description) != '') $description .= " - " . $opt->sub_group_description;
			             
			$option[$opt->proposal_revision_option_id] = $description;
			                          
			foreach ($items as $item_key => $item) {
				$spec[$opt->proposal_revision_option_id][$item_key]	= array(
					'id'    => $item['id'],
					'value' => $opt->{$item['field']},
					'title' => $item['title']
				);
			}
		}		
		
		
		
		$this->SetData('items', $items);
		$this->SetData('study', $s);
		$this->SetData('options', $option);
		$this->SetData('spec', $spec);
	}	
}
?>